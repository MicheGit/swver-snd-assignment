x := 5; // {"x": [5, 5]}
skip; // {"x": [-Inf, 5]}
while x != (x / 2) do {
skip; // {"x": [-Inf, 5]}
x := (x - 1); // {"x": [-Inf, 4]}
};
skip; // {"x": [-Inf, 0]}
x := (x + 8); // {"x": [-Inf, 8]}
if x < 0 then {
skip; // {"x": [-Inf, -1]}
x := 0; // {"x": [0, 0]}
} else {
skip; // {"x": [0, 8]}
skip; // {"x": [0, 8]}
};
skip; // {"x": [0, 8]}
if x = ((x + 4) / 2) then {
skip; // {"x": [3, 4]}
x := (x * 2); // {"x": [6, 8]}
} else {
skip; // {"x": [0, 8]}
x := 8; // {"x": [8, 8]}
};
skip; // {"x": [6, 8]}